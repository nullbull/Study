<?xml version="1.0" encoding="UTF-8"?>
<beans xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:c="http://www.springframework.org/schema/c"
       xmlns:aop="http://www.springframework.org/schema/aop">
    <context:component-scan base-package="Spring.soundSystem"/>
    <!-- data connection -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
        <property name="url" value="jdbc:mysql://localhost:3306/TESTDB"></property>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>
    <!--<beans profile="zzz">-->
        <!--<jdbc:embedded-database id="dataSource2">-->
            <!--<jdbc:script location=""></jdbc:script>-->
        <!--</jdbc:embedded-database>-->
    <!--</beans>-->

    <!-- session factory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/TESTDB</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
            </props>
        </property>
    </bean>
    <!--    <bean id="address" class="Service.AddressImpl">
            <property name="sessionFactory" ref="sessionFactory"></property>
        </bean>

        <bean id="addressAction" class="action.AddressAction">
            <property name="address" ref="address"></property>
        </bean>-->
    <!--<bean id="compactDics" class="Spring.soundSystem.BlankDisc">-->
    <!--<constructor-arg value="I love U "></constructor-arg>-->
    <!--<constructor-arg value="Justinniu"></constructor-arg>-->
    <!--<constructor-arg>-->
    <!--<list>-->
    <!--<value>nnnn</value>-->
    <!--<value>zzzz</value>-->
    <!--<value>zzzz</value>-->
    <!--<value>1111</value>-->
    <!--<value>2222</value>-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->
    <!--<bean id="zzz" class="Spring.soundSystem.CDPlayer" c:cd-ref="compactDics">-->
    <!--</bean>-->


    <!--   <bean id="sss" class="Spring.soundSystem.SgtPeppers" primary="true">
        </bean>
        <bean id="cdPlayers" class="Spring.soundSystem.CDPlayer" c:cd-ref="sss">
        </bean>
        <bean id="compact" class="Spring.soundSystem.BlankDisc">
            <property name="title" value="zzzz"></property>
            <property name="artist" value="niu"></property>
            <property name="tracks">
                <list>
                    <value>nnnn</value>
                    <value>1111</value>
                    <value>zzzz</value>
                    <value>wwww</value>
                </list>
            </property>
        </bean>-->
    <bean id="audience" class="Spring.AOP.Audience"></bean>
    <aop:config>
        <aop:pointcut id="performance" expression="execution(* main.java.Spring.AOP.Performance.perform(..))"></aop:pointcut>
        <aop:aspect ref="audience">
            <aop:before pointcut-ref="performance" method="silenceCellPhones"/>
            <aop:around method="watchPerformance" pointcut-ref="performance"/>
            <aop:before method="takeSeats" pointcut="execution(* main.java.Spring.AOP.Performance.perform())"/>
            <aop:after-returning method="applause" pointcut="execution(* main.java.Spring.AOP.Performance.perform())"/>
            <aop:after-throwing method="demandRefund" pointcut="execution(* main.java.Spring.AOP.Performance.perform())"/>
        </aop:aspect>
    </aop:config>
    <bean class="main.java.Spring.AOP.CriticismEngineImpl" id="criticismEngine">
        <property name="criticismPool">
            <list>
                <value>"bad"</value>
                <value>"too bad"</value>
                <value>"bad bad bad"</value>
            </list>
        </property>
    </bean>
    <!--<bean class="Spring.AOP.Criticzz" id="critic" factory-method="aspectOf">-->
        <!--<property name="" ref="criticismEngine"/>-->
    <!--</bean>-->
    <bean class="main.java.Spring.AOP.Worker" id="worker"></bean>
    <bean class="main.java.Spring.AOP.Audienc" id="audienc">
        <property name="worker" ref="worker"></property>
    </bean>
    <bean class="main.java.Spring.AOP.PianoPerform" id="pianoPerform"></bean>
    <bean class="main.java.Spring.AOP.ViolinPerform" id="violinPerform"></bean>
<!--    <bean id="productDao" class="niu.ssh.dao.ProductDao">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
    <bean id="productService" class="niu.ssh.service.ProductService">
        <property name="productDao" ref="productDao"></property>
    </bean>
    <bean id="productAction" class="niu.ssh.action.ProductAction" scope="prototype">
        <property name="productService" ref="productService"></property>
    </bean>-->
    <bean id="transationManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"></property>
    </bean>
</beans>